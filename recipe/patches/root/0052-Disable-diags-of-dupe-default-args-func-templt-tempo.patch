From a569e07df4c4065681a68e55d9fdfa12075b75fe Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Tue, 9 Sep 2014 09:27:41 +0200
Subject: [PATCH 52/66] Disable diags of dupe default args (func, templt)
 temporarily.

---
 clang/lib/Sema/SemaDeclCXX.cpp  | 3 +++
 clang/lib/Sema/SemaTemplate.cpp | 2 ++
 2 files changed, 5 insertions(+)

diff --git a/clang/lib/Sema/SemaDeclCXX.cpp b/clang/lib/Sema/SemaDeclCXX.cpp
index bfb619586f09..1838f5a62be7 100644
--- a/clang/lib/Sema/SemaDeclCXX.cpp
+++ b/clang/lib/Sema/SemaDeclCXX.cpp
@@ -552,6 +552,8 @@ bool Sema::MergeCXXFunctionDecl(FunctionDecl *New, FunctionDecl *Old,
         }
       }
 
+      (void)DiagDefaultParamID;
+#if 0 // Disable until Diag is rewired
       // FIXME: If we knew where the '=' was, we could easily provide a fix-it
       // hint here. Alternatively, we could walk the type-source information
       // for NewParam to find the last source location in the type... but it
@@ -573,6 +575,7 @@ bool Sema::MergeCXXFunctionDecl(FunctionDecl *New, FunctionDecl *Old,
 
       Diag(OldParam->getLocation(), diag::note_previous_definition)
         << OldParam->getDefaultArgRange();
+#endif
     } else if (OldParamHasDfl) {
       // Merge the old default argument into the new parameter unless the new
       // function is a friend declaration in a template class. In the latter
diff --git a/clang/lib/Sema/SemaTemplate.cpp b/clang/lib/Sema/SemaTemplate.cpp
index a8efcec8f467..8931b4b92a08 100644
--- a/clang/lib/Sema/SemaTemplate.cpp
+++ b/clang/lib/Sema/SemaTemplate.cpp
@@ -3000,8 +3000,10 @@ bool Sema::CheckTemplateParameterList(TemplateParameterList *NewParams,
     // checked elsewhere. But it is still not allowed to repeat template default
     // argument in the same translation unit.
     if (RedundantDefaultArg) {
+#if 0 // Disable until Diag is rewired
       Diag(NewDefaultLoc, diag::err_template_param_default_arg_redefinition);
       Diag(OldDefaultLoc, diag::note_template_param_prev_default_arg);
+#endif
       Invalid = true;
     } else if (InconsistentDefaultArg) {
       // We could only diagnose about the case that the OldParam is imported.
