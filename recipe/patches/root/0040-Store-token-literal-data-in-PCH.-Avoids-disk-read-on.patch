From 1d0903f6868c126d4b2d52dde784d62b781d8c2f Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Tue, 28 Oct 2014 18:20:18 +0100
Subject: [PATCH 40/49] Store token literal data in PCH. Avoids disk read on
 PreProc expansion (ROOT-6794).

---
 clang/include/clang/Serialization/ASTReader.h |  3 +++
 clang/lib/Serialization/ASTReader.cpp         | 11 +++++++++++
 clang/lib/Serialization/ASTWriter.cpp         |  3 +++
 3 files changed, 17 insertions(+)

diff --git a/clang/include/clang/Serialization/ASTReader.h b/clang/include/clang/Serialization/ASTReader.h
index 9999e4bd7..1f6ffa751 100644
--- a/clang/include/clang/Serialization/ASTReader.h
+++ b/clang/include/clang/Serialization/ASTReader.h
@@ -704,6 +704,9 @@ private:
   /// files.
   llvm::DenseSet<LoadedMacroInfo> LoadedUndefs;
 
+  /// \Token literal data loaded and owned by us.
+  std::vector<std::string *> TokenLiteralDataLoaded;
+
   using GlobalMacroMapType =
       ContinuousRangeMap<serialization::MacroID, ModuleFile *, 4>;
 
diff --git a/clang/lib/Serialization/ASTReader.cpp b/clang/lib/Serialization/ASTReader.cpp
index ff92f197e..53ee501b5 100644
--- a/clang/lib/Serialization/ASTReader.cpp
+++ b/clang/lib/Serialization/ASTReader.cpp
@@ -1911,6 +1911,14 @@ Token ASTReader::ReadToken(ModuleFile &M, const RecordDataImpl &Record,
     if (IdentifierInfo *II = getLocalIdentifier(M, Record[Idx++]))
       Tok.setIdentifierInfo(II);
   }
+
+  if (Tok.isLiteral()) {
+    const RecordData& RD = reinterpret_cast<const RecordData&>(Record);
+    std::string* Lit = new std::string(ReadString(RD, Idx));
+    TokenLiteralDataLoaded.push_back(Lit);
+    Tok.setLiteralData(Lit->c_str());
+  }
+
   return Tok;
 }
 
@@ -10464,6 +10472,9 @@ ASTReader::ASTReader(Preprocessor &PP, InMemoryModuleCache &ModuleCache,
 ASTReader::~ASTReader() {
   if (OwnsDeserializationListener)
     delete DeserializationListener;
+  for (auto PStr: TokenLiteralDataLoaded) {
+     delete PStr;
+  }
 }
 
 IdentifierResolver &ASTReader::getIdResolver() {
diff --git a/clang/lib/Serialization/ASTWriter.cpp b/clang/lib/Serialization/ASTWriter.cpp
index 62816fef3..6d0c4b86a 100644
--- a/clang/lib/Serialization/ASTWriter.cpp
+++ b/clang/lib/Serialization/ASTWriter.cpp
@@ -4689,6 +4689,9 @@ void ASTWriter::AddToken(const Token &Tok, RecordDataImpl &Record) {
     // is needed.
     AddIdentifierRef(Tok.getIdentifierInfo(), Record);
   }
+
+  if (Tok.isLiteral())
+    AddString(StringRef(Tok.getLiteralData(), Tok.getLength()), Record);
 }
 
 void ASTWriter::AddString(StringRef Str, RecordDataImpl &Record) {
