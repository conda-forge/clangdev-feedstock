From d8deeb12d185b4fb96184a78002a6c248fd1c9f4 Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Fri, 3 Mar 2023 12:37:00 +0100
Subject: [PATCH 6/6] survive -Inon-accessible-directory:

If part of the -I search path cannot be accessed (permissions),
clang will throw an error, even if the header can be found in
subsequent search path elements. This is counter productive as
the compilation will seem to have failed due to that error, even
though everyone is happy.

This is not the sys first error that needs to be suppressed, and
it might not be the last...

(cherry picked from commit b02e870f8d9e5d01732914d9b7bbc0a3313a3135)
---
 lib/Lex/HeaderSearch.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/lib/Lex/HeaderSearch.cpp b/lib/Lex/HeaderSearch.cpp
index 3fb5c61d33..1e6393345a 100644
--- a/lib/Lex/HeaderSearch.cpp
+++ b/lib/Lex/HeaderSearch.cpp
@@ -367,7 +367,9 @@ Optional<FileEntryRef> HeaderSearch::getFileAndSuggestModule(
     std::error_code EC = llvm::errorToErrorCode(File.takeError());
     if (EC != llvm::errc::no_such_file_or_directory &&
         EC != llvm::errc::invalid_argument &&
-        EC != llvm::errc::is_a_directory && EC != llvm::errc::not_a_directory) {
+        EC != llvm::errc::is_a_directory &&
+        EC != llvm::errc::not_a_directory &&
+        EC != llvm::errc::permission_denied) {
       Diags.Report(IncludeLoc, diag::err_cannot_open_file)
           << FileName << EC.message();
     }
-- 
2.34.1

