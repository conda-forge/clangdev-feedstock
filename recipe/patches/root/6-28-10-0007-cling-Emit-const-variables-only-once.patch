From 5d5055935cb20801c67169e83035dfd4a015162a Mon Sep 17 00:00:00 2001
From: Jonas Hahnfeld <jonas.hahnfeld@cern.ch>
Date: Tue, 3 Oct 2023 17:03:11 +0200
Subject: [PATCH 7/8] [cling] Emit const variables only once

Otherwise they are emitted as internal and we get double-construction
and -destruction on the same memory address due to the way we promote
internal declarations in KeepLocalGVPass.

According to upstream tests, the de-duplication doesn't work on Windows
(yet), but I think this problem is severe enough to fix it on the other
platforms sooner rather than later.

Fixes #13429

(cherry picked from commit 2dc57866c1d18010d3ebee681cc5e7777cd4d017)
---
 interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp b/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp
index 00ec96abae..4e80e85944 100644
--- a/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp
+++ b/interpreter/llvm/src/tools/clang/lib/AST/ASTContext.cpp
@@ -10833,6 +10833,15 @@ GVALinkage ASTContext::GetGVALinkageForFunction(const FunctionDecl *FD) const {
 
 static GVALinkage basicGVALinkageForVariable(const ASTContext &Context,
                                              const VarDecl *VD) {
+  // As an extension for interactive REPLs, make sure constant variables are
+  // only emitted once instead of LinkageComputer::getLVForNamespaceScopeDecl
+  // marking them as internal.
+  if (Context.getLangOpts().CPlusPlus &&
+      VD->getType().isConstQualified() &&
+      !VD->getType().isVolatileQualified() && !VD->isInline() &&
+      !isa<VarTemplateSpecializationDecl>(VD) && !VD->getDescribedVarTemplate())
+    return GVA_DiscardableODR;
+
   if (!VD->isExternallyVisible())
     return GVA_Internal;
 
-- 
2.42.0

