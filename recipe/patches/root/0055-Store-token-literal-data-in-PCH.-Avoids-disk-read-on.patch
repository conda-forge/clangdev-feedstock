From 00180ec6fbd604e6d5adedf146664226a399bcbd Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Tue, 28 Oct 2014 18:20:18 +0100
Subject: [PATCH 55/65] Store token literal data in PCH. Avoids disk read on
 PreProc expansion (ROOT-6794).

---
 clang/include/clang/Serialization/ASTReader.h |  3 +++
 clang/lib/Serialization/ASTReader.cpp         | 11 +++++++++++
 clang/lib/Serialization/ASTWriter.cpp         |  3 +++
 3 files changed, 17 insertions(+)

diff --git a/clang/include/clang/Serialization/ASTReader.h b/clang/include/clang/Serialization/ASTReader.h
index 5cdbdfe4e38d..56d0aea6792c 100644
--- a/clang/include/clang/Serialization/ASTReader.h
+++ b/clang/include/clang/Serialization/ASTReader.h
@@ -668,6 +668,9 @@ private:
   /// files.
   llvm::DenseSet<LoadedMacroInfo> LoadedUndefs;
 
+  /// \Token literal data loaded and owned by us.
+  std::vector<std::string *> TokenLiteralDataLoaded;
+
   using GlobalMacroMapType =
       ContinuousRangeMap<serialization::MacroID, ModuleFile *, 4>;
 
diff --git a/clang/lib/Serialization/ASTReader.cpp b/clang/lib/Serialization/ASTReader.cpp
index 4c2b67c97559..1d3db8f936a2 100644
--- a/clang/lib/Serialization/ASTReader.cpp
+++ b/clang/lib/Serialization/ASTReader.cpp
@@ -1700,6 +1700,14 @@ Token ASTReader::ReadToken(ModuleFile &F, const RecordDataImpl &Record,
     if (IdentifierInfo *II = getLocalIdentifier(F, Record[Idx++]))
       Tok.setIdentifierInfo(II);
   }
+
+  if (Tok.isLiteral()) {
+    const RecordData& RD = reinterpret_cast<const RecordData&>(Record);
+    std::string* Lit = new std::string(ReadString(RD, Idx));
+    TokenLiteralDataLoaded.push_back(Lit);
+    Tok.setLiteralData(Lit->c_str());
+  }
+
   return Tok;
 }
 
@@ -9982,6 +9990,9 @@ ASTReader::ASTReader(Preprocessor &PP, InMemoryModuleCache &ModuleCache,
 ASTReader::~ASTReader() {
   if (OwnsDeserializationListener)
     delete DeserializationListener;
+  for (auto PStr: TokenLiteralDataLoaded) {
+     delete PStr;
+  }
 }
 
 IdentifierResolver &ASTReader::getIdResolver() {
diff --git a/clang/lib/Serialization/ASTWriter.cpp b/clang/lib/Serialization/ASTWriter.cpp
index 9dbe9dae46c9..5c71e51c7daf 100644
--- a/clang/lib/Serialization/ASTWriter.cpp
+++ b/clang/lib/Serialization/ASTWriter.cpp
@@ -4426,6 +4426,9 @@ void ASTWriter::AddToken(const Token &Tok, RecordDataImpl &Record) {
     // is needed.
     AddIdentifierRef(Tok.getIdentifierInfo(), Record);
   }
+
+  if (Tok.isLiteral())
+    AddString(StringRef(Tok.getLiteralData(), Tok.getLength()), Record);
 }
 
 void ASTWriter::AddString(StringRef Str, RecordDataImpl &Record) {
