From 823f075cc82f18ff9180c4a73053f9fc885b7723 Mon Sep 17 00:00:00 2001
From: Jonas Hahnfeld <jonas.hahnfeld@cern.ch>
Date: Wed, 17 May 2023 14:44:02 +0200
Subject: [PATCH 06/66] UPSTREAM: [clang][modules] Add features for recent C++
 versions

Add cplusplus20.

Differential Revision: https://reviews.llvm.org/D150773

(cherry picked only the cplusplus20 part from commit 53c03a3db16cd9b51476ce4b4fb1adc1b58f1ff7)
---
 clang/docs/Modules.rst                                    | 3 +++
 clang/lib/Basic/Module.cpp                                | 1 +
 .../Modules/Inputs/DependsOnModule.framework/module.map   | 3 +++
 clang/test/Modules/requires.m                             | 8 +++++---
 4 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/clang/docs/Modules.rst b/clang/docs/Modules.rst
index 825d8722c4d5..9da92c6a30f7 100644
--- a/clang/docs/Modules.rst
+++ b/clang/docs/Modules.rst
@@ -573,6 +573,9 @@ cplusplus14
 cplusplus17
   C++17 support is available.
 
+cplusplus20
+  C++20 support is available.
+
 c99
   C99 support is available.
 
diff --git a/clang/lib/Basic/Module.cpp b/clang/lib/Basic/Module.cpp
index 9c4c83486c2d..dbc66496af2e 100644
--- a/clang/lib/Basic/Module.cpp
+++ b/clang/lib/Basic/Module.cpp
@@ -108,6 +108,7 @@ static bool hasFeature(StringRef Feature, const LangOptions &LangOpts,
                         .Case("cplusplus11", LangOpts.CPlusPlus11)
                         .Case("cplusplus14", LangOpts.CPlusPlus14)
                         .Case("cplusplus17", LangOpts.CPlusPlus17)
+                        .Case("cplusplus20", LangOpts.CPlusPlus20)
                         .Case("c99", LangOpts.C99)
                         .Case("c11", LangOpts.C11)
                         .Case("c17", LangOpts.C17)
diff --git a/clang/test/Modules/Inputs/DependsOnModule.framework/module.map b/clang/test/Modules/Inputs/DependsOnModule.framework/module.map
index 948a1efd743a..850b23317406 100644
--- a/clang/test/Modules/Inputs/DependsOnModule.framework/module.map
+++ b/clang/test/Modules/Inputs/DependsOnModule.framework/module.map
@@ -46,6 +46,9 @@ framework module DependsOnModule {
   explicit module CXX17 {
     requires cplusplus17
   }
+  explicit module CXX20 {
+    requires cplusplus20
+  }
   explicit module C99 {
     requires c99
   }
diff --git a/clang/test/Modules/requires.m b/clang/test/Modules/requires.m
index 0ba51d4609ce..934ab9133235 100644
--- a/clang/test/Modules/requires.m
+++ b/clang/test/Modules/requires.m
@@ -22,11 +22,13 @@
 @import DependsOnModule.CXX14; // expected-note {{module imported here}}
 // expected-error@DependsOnModule.framework/module.map:46 {{module 'DependsOnModule.CXX17' requires feature 'cplusplus17'}}
 @import DependsOnModule.CXX17; // expected-note {{module imported here}}
+// expected-error@DependsOnModule.framework/module.map:49 {{module 'DependsOnModule.CXX20' requires feature 'cplusplus20'}}
+@import DependsOnModule.CXX20; // expected-note {{module imported here}}
 #else
-// expected-error@DependsOnModule.framework/module.map:49 {{module 'DependsOnModule.C99' requires feature 'c99'}}
+// expected-error@DependsOnModule.framework/module.map:52 {{module 'DependsOnModule.C99' requires feature 'c99'}}
 @import DependsOnModule.C99; // expected-note {{module imported here}}
-// expected-error@DependsOnModule.framework/module.map:52 {{module 'DependsOnModule.C11' requires feature 'c11'}}
+// expected-error@DependsOnModule.framework/module.map:55 {{module 'DependsOnModule.C11' requires feature 'c11'}}
 @import DependsOnModule.C11; // expected-note {{module imported here}}
-// expected-error@DependsOnModule.framework/module.map:55 {{module 'DependsOnModule.C17' requires feature 'c17'}}
+// expected-error@DependsOnModule.framework/module.map:58 {{module 'DependsOnModule.C17' requires feature 'c17'}}
 @import DependsOnModule.C17; // expected-note {{module imported here}}
 #endif
