From 87df9e284089115d80c3a3c3b650f41bf3fbc5a2 Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Tue, 27 Sep 2016 11:55:47 +0200
Subject: [PATCH 66/83] Improve int literal printing for template args. To be
 upstreamed.

This fixes
```
math/mathcore/G__MathCore.cxx:450:57: warning: integer literal is too large to be represented in a signed integer type, interpreting as unsigned [-Wimplicitly-unsigned-literal]
      ::mersenne_twister_engine<ULong64_t,64,312,156,31,13043109905998158313,...
```
The code meant to test whether the highest bit is set. `isNegative` is false for
unsigned values; we have to check whether the bit pattern starts with at least one
leading one bit.
---
 lib/AST/TemplateBase.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/lib/AST/TemplateBase.cpp b/lib/AST/TemplateBase.cpp
index f44230d1bd..72dadd2f55 100644
--- a/lib/AST/TemplateBase.cpp
+++ b/lib/AST/TemplateBase.cpp
@@ -130,8 +130,14 @@ static void printIntegral(const TemplateArgument &TemplArg, raw_ostream &Out,
     } else
       Out << "(" << T->getCanonicalTypeInternal().getAsString(Policy) << ")"
           << Val;
-  } else
+  } else {
     Out << Val;
+    // Handle cases where the value is too large to fit into the underlying type
+    // i.e. where the unsignedness matters.
+    if (T->isBuiltinType())
+      if (Val.isUnsigned() && Val.getBitWidth() == 64 && Val.countLeadingOnes())
+        Out << "ull";
+  }
 }
 
 static unsigned getArrayDepth(QualType type) {
-- 
2.34.1

